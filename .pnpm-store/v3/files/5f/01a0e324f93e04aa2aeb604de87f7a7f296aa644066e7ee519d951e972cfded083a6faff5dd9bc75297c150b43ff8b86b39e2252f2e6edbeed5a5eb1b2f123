{"version":3,"file":"rematch.js","sources":["../../node_modules/reselect/es/index.js","../../src/utils/createGetters.ts","../../src/utils/validate.ts","../../src/utils/isModels.ts","../../src/utils/getCurrentModelState.ts","../../node_modules/symbol-observable/es/index.js","../../src/utils/walk.ts","../../src/plugins/dispatch.ts","../../src/plugins/effects.ts","../../src/plugins/gettters.ts","../../src/plugins/lifecycle.ts","../../node_modules/redux/es/redux.js","../../node_modules/symbol-observable/es/ponyfill.js","../../src/redux.ts","../../src/rematch.ts","../../src/pluginFactory.ts","../../src/utils/mergeConfig.ts","../../src/init.ts","../../src/combineModels.ts","../../src/createModel.ts"],"sourcesContent":["function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { createSelector } from 'reselect'\nimport * as R from '../typings'\n\nconst EMPTY_GETTERS = {}\n\nexport const createGetters = (getters: R.ModelGetters<any> = EMPTY_GETTERS) => {\n  const memoizeGetters = {}\n  Object.keys(getters).forEach(k => {\n    memoizeGetters[k] = createSelector(getters[k], input => input)\n  })\n  return (state: any) => {\n    const result = {}\n    Object.keys(memoizeGetters).forEach(k => {\n      result[k] = memoizeGetters[k](state)\n    })\n    return {\n      ...state,\n      getters: result,\n    }\n  }\n}\n","import { Validation } from '../typings'\n\n/**\n * validate\n *\n * takes an array of arrays of validations and\n * throws if an error occurs\n */\nexport const validate = (validations: Validation[]): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    for (const validation of validations) {\n      const condition = validation[0]\n      const errorMessage = validation[1]\n      if (condition) {\n        throw new Error(errorMessage)\n      }\n    }\n  }\n}\n","import * as R from '../typings'\n\nexport const isModels = (\n  reducers: { [key: string]: R.ModelReducers<any> } | R.ModelReducers<any>,\n) => {\n  const reducerKeys = Object.keys(reducers)\n  return reducerKeys.some(key => typeof reducers[key] === 'object')\n}\n","import { validate } from '../utils/validate'\n\n/**\n * - `modelname/submodelname/effectname`, currentState is rootState[modelName][subModelName]\n * - `modelname/effectName`, currentState is rootState[modelName]\n * @param store redux.store\n * @param actionType 'modelname/submodelname/effectname' or 'modelname/effectname'\n */\nexport const getCurrentModelState = (rootState: object, actionType: string) => {\n  validate([\n    [!actionType.match(/\\//), `action.type format should be 'modelNanme/subModelName?/effectName'`],\n  ])\n  const actions = actionType.split('/')\n  if (actions.length <= 1) {\n    return rootState\n  } else {\n    const currentState = actions.slice(0, actions.length - 1).reduce((acc, current) => {\n      return acc[current]\n    }, rootState)\n    return currentState\n  }\n}\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import { isModels } from './isModels'\nimport { validate } from './validate'\n\n/**\n * similar with recurBindDispatch, same dispatch behaviours\n * @param modelName model.name\n * @param prefix model.name -> model.name/submodel.name -> model.name/submodel.name/reducername\n * @param effects model.effects\n * ```js\n * // option1\n * effects: {\n *   [effectName]: reducer\n * }\n * // option2\n * effects: {\n *   [submodelName]: ModelEffects // or recur option2\n * }\n * ```\n * @param normalizedEffects normalized model.effects\n * ```js\n * {\n *    [modelname/submodelname?/effectName]: effect\n * }\n * ```\n * @param dispatch store.dispatch\n * @param createActor dispatchPlugin.createActor\n * @param context\n */\n\ntype ActionCallback = (\n  prefix: string,\n  key: string,\n  actions: any,\n  dispatch: any,\n  effectOrreducer: Function,\n) => void\n\nexport const walk = ({\n  modelName,\n  prefix,\n  effectsOrReducers,\n  actions,\n  dispatch,\n  onActionCallback,\n}: {\n  modelName: string\n  prefix: string\n  effectsOrReducers: any\n  actions: any\n  dispatch: Function\n  onActionCallback?: ActionCallback\n}) => {\n  const keys = Object.keys(effectsOrReducers)\n  if (isModels(effectsOrReducers)) {\n    keys.forEach(key => {\n      if (prefix.endsWith(key)) {\n        walk({\n          modelName,\n          prefix,\n          effectsOrReducers: effectsOrReducers[key],\n          actions,\n          dispatch,\n          onActionCallback,\n        })\n      } else {\n        const nextPrefix = key === modelName ? key : `${prefix}/${key}`\n        actions[key] = actions[key] || {}\n        dispatch[key] = dispatch[key] || {}\n        walk({\n          modelName,\n          prefix: nextPrefix,\n          effectsOrReducers: effectsOrReducers[key],\n          actions: actions[key],\n          dispatch: dispatch[key],\n          onActionCallback,\n        })\n      }\n    })\n  } else {\n    keys.forEach(key => {\n      if (!onActionCallback) {\n        return\n      }\n      validate([\n        [\n          !!key.match(/\\/.+\\//) || !!key.match(/\\//),\n          `Invalid effect or reducer name (${prefix}/${key})`,\n        ],\n        [key === 'dispatch', `Effect or Reducer can not named 'dispatch'`],\n        [\n          typeof effectsOrReducers[key] !== 'function',\n          `Invalid effect or reducer (${prefix}/${key}). Must be a function`,\n        ],\n      ])\n      onActionCallback(prefix, key, actions, dispatch, effectsOrReducers[key])\n    })\n  }\n}\n","import * as R from '../typings'\nimport { walk } from '../utils/walk'\n\n/**\n * Dispatch Plugin\n *\n * generates dispatch[modelName][subModelName]...[actionName]\n */\nconst dispatchPlugin: R.Plugin = {\n  exposed: {\n    // required as a placeholder for store.dispatch\n    storeDispatch(action: R.Action, state: any) {\n      console.warn('Warning: store not yet loaded')\n    },\n\n    storeGetState() {\n      console.warn('Warning: store not yet loaded')\n    },\n\n    /**\n     * dispatch\n     *\n     * both a function (dispatch) and an object (dispatch[modelName][actionName])\n     * @param action R.Action\n     */\n    dispatch(action: R.Action) {\n      return this.storeDispatch(action)\n    },\n\n    /**\n     * createActor\n     *\n     * genereates an action creator for a given model & reducer\n     * @param modelName string\n     * @param reducerName string\n     */\n    createActor(modelName: string, reducerName: string) {\n      return (payload?: any, meta?: any) => {\n        const action: R.Action = { type: `${modelName}/${reducerName}` }\n        if (typeof payload !== 'undefined') {\n          action.payload = payload\n        }\n        if (typeof meta !== 'undefined') {\n          action.meta = meta\n        }\n        return action\n      }\n    },\n    // a nested object contain functions, which will create redux(reducers|effects) action object\n    actions: {},\n    // a plain object contain reducer functions, which will dispatch reducer action\n    reducers: {},\n  },\n\n  // access store.dispatch after store is created\n  onStoreCreated(store: any) {\n    this.storeDispatch = store.dispatch\n    this.storeGetState = store.getState\n    return { dispatch: this.dispatch }\n  },\n\n  // generate action creators for all model.reducers\n  onModel(model: R.Model) {\n    this.dispatch[model.name] = {}\n    this.actions[model.name] = {}\n    if (!model.reducers) {\n      return\n    }\n    walk({\n      modelName: model.name,\n      prefix: model.name,\n      effectsOrReducers: model.reducers,\n      actions: this.actions[model.name],\n      dispatch: this.dispatch[model.name],\n      onActionCallback: (prefix, key, actions, dispatch, reducer) => {\n        actions[key] = this.createActor(prefix, key)\n        dispatch[key] = async (payload: any, meta: any) => {\n          const action = actions[key](payload, meta)\n          this.dispatch(action)\n        }\n        this.reducers[`${prefix}/${key}`] = dispatch[key]\n      },\n    })\n  },\n}\n\nexport default dispatchPlugin\n","/* tslint-disable member-ordering */\nimport * as R from '../typings'\nimport { getCurrentModelState } from '../utils/getCurrentModelState'\nimport { walk } from '../utils/walk'\n\n/**\n * Effects Plugin\n *\n * Plugin for handling async actions\n */\nconst effectsPlugin: R.Plugin = {\n  exposed: {\n    // a plain object contain reducer functions, which will dispatch effect action\n    effects: {},\n  },\n\n  // add effects to dispatch so that dispatch[modelName][effectName] calls an effect\n  onModel(model: R.Model): void {\n    if (!model.effects) {\n      return\n    }\n    walk({\n      modelName: model.name,\n      prefix: model.name,\n      effectsOrReducers: model.effects,\n      actions: this.actions[model.name],\n      dispatch: this.dispatch[model.name],\n      onActionCallback: (prefix, key, actions, dispatch, effect) => {\n        this.effects[`${prefix}/${key}`] = effect.bind(dispatch)\n        actions[key] = this.createActor(prefix, key)\n        dispatch[key] = async (payload: any, meta: any) => {\n          const action = actions[key](payload, meta)\n          return this.dispatch(action)\n        }\n        dispatch[key].isEffect = true\n        this.effects[`${prefix}/${key}`].isEffect = true\n      },\n    })\n    this.dispatch[model.name].dispatch = this.dispatch\n  },\n\n  // process async/await actions\n  middleware(store) {\n    return next => async (action: R.Action) => {\n      // async/await acts as promise middleware\n      if (action.type in this.effects) {\n        await next(action)\n        return this.effects[action.type](\n          action.payload,\n          store.getState(),\n          getCurrentModelState(store.getState(), action.type),\n          action.meta,\n        )\n      }\n      return next(action)\n    }\n  },\n}\n\nexport default effectsPlugin\n","/* tslint-disable member-ordering */\nimport * as R from '../typings'\nimport { getCurrentModelState } from '../utils/getCurrentModelState'\n\n/**\n * Getters Plugin\n *\n * Plugin for handling getters\n */\nconst gettersPlugin: R.Plugin = {\n  // process async/await actions\n  middleware(store) {\n    return next => (action: R.Action) => {\n      if (!action.type.endsWith('__getters')) {\n        next(action)\n        const name = action.type.split('/')[0]\n        const keys = Object.keys(this.reducers).filter((key: string) => {\n          return key.startsWith(name) && key.endsWith('__getters')\n        })\n        keys.forEach(key => {\n          this.reducers[key](getCurrentModelState(store.getState(), key))\n        })\n        return store.getState()\n      } else {\n        return next(action)\n      }\n    }\n  },\n}\n\nexport default gettersPlugin\n","/* tslint-disable member-ordering */\nimport * as R from '../typings'\n\n/**\n * Lifecycle Plugin\n *\n * Plugin for handling lifecycle\n * 1. init\n */\nconst initPlugin: R.Plugin = {\n  onStoreCreated(store) {\n    // init\n    Object.keys(this.effects).map(key => {\n      if (key.endsWith('__init')) {\n        store.dispatch({ type: key })\n      }\n    })\n  },\n}\n\nexport default initPlugin\n","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","import * as Redux from 'redux'\n\nimport * as R from './typings'\nimport { isModels } from './utils/isModels'\n\nconst composeEnhancersWithDevtools = (devtoolOptions: R.DevtoolOptions = {}): any => {\n  const { disabled, ...options } = devtoolOptions\n  /* istanbul ignore next */\n  return !disabled && typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(options)\n    : Redux.compose\n}\n\n/**\n * ```js\n * city: {\n *   zoo: {\n *     dolphins, // reducers\n *     sharks, // reducers\n *     zoo? // reducers\n *   },\n *   person // reducers\n *   city: // reducers\n * }\n * ```\n * - dolphins and sharks, person will create in else block\n * - zoo(same name with parentKey), will create in else block\n * - city(same name with model.name), will filter, create outside of this function\n * then,\n * 1. redux.combinereducers(dolphins and sharks)\n * 2. combined step1-reducer-func with zoo-reducer-function\n * 3.\n * @param modelName model.name\n * @param prefix model.name -> model.name/submodel.name -> model.name/submodel.name/reducername, name for redux.model\n * @param modelState initial state\n * @param reducers model.reducers,\n * @param combineReducers redux.combineReducers\n */\nconst recurCreateModelReducer = (\n  modelName: string,\n  prefix: string,\n  modelState: any,\n  reducers: any,\n  combineReducers: Function,\n): Function => {\n  const rootReducers = {}\n  const extraReducers = {}\n  let isCombined = false\n  if (isModels(reducers)) {\n    Object.keys(reducers)\n      .filter(key => key !== modelName)\n      .forEach(key => {\n        const nextPrefix = `${prefix}/${key}`\n        isCombined = isCombined ? isCombined : prefix.endsWith(key)\n        if (prefix.endsWith(key)) {\n          Object.keys(reducers[key]).forEach(reducerName => {\n            extraReducers[`${prefix}/${reducerName}`] = reducers[key][reducerName]\n          })\n        } else {\n          rootReducers[key] = recurCreateModelReducer(\n            modelName,\n            nextPrefix,\n            modelState[key],\n            reducers[key],\n            combineReducers,\n          )\n        }\n      })\n    const combinedReducers = combineReducers(rootReducers)\n    if (!isCombined) {\n      return combinedReducers\n    } else {\n      return (state: any = modelState, action: R.Action) => {\n        if (typeof extraReducers[action.type] === 'function') {\n          return extraReducers[action.type](state, action.payload, action.meta)\n        }\n        return combinedReducers(state, action)\n      }\n    }\n  } else {\n    Object.keys(reducers).forEach(key => {\n      const nextPrefix = `${prefix}/${key}`\n      rootReducers[nextPrefix] = reducers[key]\n    })\n    return (state: any = modelState, action: R.Action) => {\n      if (typeof rootReducers[action.type] === 'function') {\n        return rootReducers[action.type](state, action.payload, action.meta)\n      }\n      return state\n    }\n  }\n}\n\nexport default function({ redux, models }: { redux: R.ConfigRedux; models: R.Model[] }) {\n  const combineReducers = redux.combineReducers || Redux.combineReducers\n  const createStore: Redux.StoreCreator = redux.createStore || Redux.createStore\n  const initialState: any = typeof redux.initialState !== 'undefined' ? redux.initialState : {}\n\n  this.reducers = redux.reducers\n\n  // combine models to generate reducers\n  this.mergeReducers = (nextReducers: R.ModelReducers = {}) => {\n    // merge new reducers with existing reducers\n    this.reducers = { ...this.reducers, ...nextReducers }\n    if (!Object.keys(this.reducers).length) {\n      // no reducers, just return state\n      return (state: any) => state\n    }\n    return combineReducers(this.reducers)\n  }\n\n  this.createModelReducer = (model: R.Model) => {\n    const modelBaseReducer = model.baseReducer\n    const modelReducer = recurCreateModelReducer(\n      model.name,\n      model.name,\n      model.state,\n      model.reducers || {},\n      combineReducers,\n    )\n    const selfReducers = {}\n    if (model.reducers[model.name]) {\n      Object.keys(model.reducers[model.name]).forEach(key => {\n        selfReducers[`${model.name}/${key}`] = model.reducers[model.name][key]\n      })\n    }\n    const combinedReducer = (state: any = model.state, action: R.Action) => {\n      if (selfReducers && typeof selfReducers[action.type] === 'function') {\n        return selfReducers[action.type](state, action.payload, action.meta)\n      }\n      return modelReducer(state, action)\n    }\n\n    this.reducers[model.name] = !modelBaseReducer\n      ? combinedReducer\n      : (state: any, action: R.Action) => combinedReducer(modelBaseReducer(state, action), action)\n  }\n  // initialize model reducers\n  for (const model of models) {\n    this.createModelReducer(model)\n  }\n\n  this.createRootReducer = (rootReducers: R.RootReducers = {}): Redux.Reducer<any, R.Action> => {\n    const mergedReducers: Redux.Reducer<any> = this.mergeReducers()\n    if (Object.keys(rootReducers).length) {\n      return (state, action) => {\n        const rootReducerAction = rootReducers[action.type]\n        if (rootReducers[action.type]) {\n          return mergedReducers(rootReducerAction(state, action), action)\n        }\n        return mergedReducers(state, action)\n      }\n    }\n    return mergedReducers\n  }\n\n  const rootReducer = this.createRootReducer(redux.rootReducers)\n\n  const middlewares = Redux.applyMiddleware(...redux.middlewares)\n  const enhancers = composeEnhancersWithDevtools(redux.devtoolOptions)(\n    ...redux.enhancers,\n    middlewares,\n  )\n\n  this.store = createStore(rootReducer, initialState, enhancers)\n\n  return this\n}\n","import pluginFactory from './pluginFactory'\nimport dispatchPlugin from './plugins/dispatch'\nimport effectsPlugin from './plugins/effects'\nimport gettersPlugin from './plugins/gettters'\nimport lifecyclePlugin from './plugins/lifecycle'\nimport createRedux from './redux'\nimport * as R from './typings'\nimport { validate } from './utils/validate'\n\nconst corePlugins: R.Plugin[] = [dispatchPlugin, effectsPlugin, lifecyclePlugin, gettersPlugin]\n\n/**\n * Rematch class\n *\n * an instance of Rematch generated by \"init\"\n */\nexport default class Rematch {\n  protected config: R.Config\n  protected models: R.Model[]\n  private plugins: R.Plugin[] = []\n  private pluginFactory: R.PluginFactory\n\n  constructor(config: R.Config) {\n    this.config = config\n    this.pluginFactory = pluginFactory(config)\n    for (const plugin of corePlugins.concat(this.config.plugins)) {\n      this.plugins.push(this.pluginFactory.create(plugin))\n    }\n    // preStore: middleware, model hooks\n    this.forEachPlugin('middleware', middleware => {\n      this.config.redux.middlewares.push(middleware)\n    })\n  }\n  public forEachPlugin(method: string, fn: (content: any) => void) {\n    for (const plugin of this.plugins) {\n      if (plugin[method]) {\n        fn(plugin[method])\n      }\n    }\n  }\n  public getModels(models: R.Models): R.Model[] {\n    return Object.keys(models).map((name: string) => ({\n      name,\n      ...models[name],\n      reducers: models[name].reducers || {},\n    }))\n  }\n  public addModel(model: R.Model) {\n    validate([\n      [!model, 'model config is required'],\n      [typeof model.name !== 'string', 'model \"name\" [string] is required'],\n      [model.state === undefined && model.baseReducer === undefined, 'model \"state\" is required'],\n      [\n        model.baseReducer !== undefined && typeof model.baseReducer !== 'function',\n        'model \"baseReducer\" must be a function',\n      ],\n      [typeof model.effects === 'function', `Model.effects as function is not allowed`],\n    ])\n    // run plugin model subscriptions\n    this.forEachPlugin('onModel', onModel => onModel(model))\n  }\n  public init() {\n    // collect all models\n    this.models = this.getModels(this.config.models)\n    for (const model of this.models) {\n      this.addModel(model)\n    }\n    // create a redux store with initialState\n    // merge in additional extra reducers\n    const redux = createRedux.call(this, {\n      redux: this.config.redux,\n      models: this.models,\n    })\n\n    const rematchStore = {\n      name: this.config.name,\n      ...redux.store,\n      // dynamic loading of models with `replaceReducer`\n      model: (model: R.Model) => {\n        this.addModel(model)\n        redux.mergeReducers(redux.createModelReducer(model))\n        redux.store.replaceReducer(redux.createRootReducer(this.config.redux.rootReducers))\n        redux.store.dispatch({ type: '@@redux/REPLACE ' })\n      },\n    }\n\n    this.forEachPlugin('onStoreCreated', onStoreCreated => {\n      const returned = onStoreCreated(rematchStore)\n      // if onStoreCreated returns an object value\n      // merge its returned value onto the store\n      if (returned) {\n        Object.keys(returned || {}).forEach(key => {\n          rematchStore[key] = returned[key]\n        })\n      }\n    })\n\n    return rematchStore\n  }\n}\n","import * as R from './typings'\nimport { validate } from './utils/validate'\n\n/**\n * PluginFactory\n *\n * makes Plugin objects extend and inherit from a root PluginFactory\n */\nexport default (config: R.Config) => ({\n  config,\n  /**\n   * validate\n   *\n   * bind validate to the store for easy access\n   */\n  validate,\n\n  /**\n   * create plugin\n   *\n   * binds plugin properties and functions to an instance of PluginFactorys\n   * @param plugin\n   */\n  create(plugin: R.Plugin): R.Plugin {\n    validate([\n      [\n        plugin.onStoreCreated && typeof plugin.onStoreCreated !== 'function',\n        'Plugin onStoreCreated must be a function',\n      ],\n      [plugin.onModel && typeof plugin.onModel !== 'function', 'Plugin onModel must be a function'],\n      [\n        plugin.middleware && typeof plugin.middleware !== 'function',\n        'Plugin middleware must be a function',\n      ],\n    ])\n\n    if (plugin.onInit) {\n      plugin.onInit.call(this)\n    }\n\n    const result: R.Plugin | any = {}\n\n    if (plugin.exposed) {\n      for (const key of Object.keys(plugin.exposed)) {\n        this[key] =\n          typeof plugin.exposed[key] === 'function'\n            ? plugin.exposed[key].bind(this) // bind functions to plugin class\n            : Object.create(plugin.exposed[key]) // add exposed to plugin class\n      }\n    }\n    for (const method of ['onModel', 'middleware', 'onStoreCreated']) {\n      if (plugin[method]) {\n        result[method] = plugin[method].bind(this)\n      }\n    }\n    return result\n  },\n})\n","import * as R from '../typings'\nimport { validate } from './validate'\n\nconst merge = (original: any, next: any): any => {\n  return next ? { ...next, ...(original || {}) } : original || {}\n}\n\nconst isObject = (obj: object): boolean => Array.isArray(obj) || typeof obj !== 'object'\n\n/**\n * mergeConfig\n *\n * merge init configs together\n */\nexport default (initConfig: R.InitConfig & { name: string }): R.Config => {\n  const config: R.Config = {\n    name: initConfig.name,\n    models: {},\n    plugins: [],\n    ...initConfig,\n    redux: {\n      reducers: {},\n      rootReducers: {},\n      enhancers: [],\n      middlewares: [],\n      ...initConfig.redux,\n      devtoolOptions: {\n        name: initConfig.name,\n        ...(initConfig.redux && initConfig.redux.devtoolOptions\n          ? initConfig.redux.devtoolOptions\n          : {}),\n      },\n    },\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    validate([\n      [!initConfig.name, 'Model name is required'],\n      [!Array.isArray(config.plugins), 'init config.plugins must be an array'],\n      [isObject(config.models), 'init config.models must be an object'],\n      [isObject(config.redux.reducers), 'init config.redux.reducers must be an object'],\n      [!Array.isArray(config.redux.middlewares), 'init config.redux.middlewares must be an array'],\n      [\n        !Array.isArray(config.redux.enhancers),\n        'init config.redux.enhancers must be an array of functions',\n      ],\n      [\n        config.redux.combineReducers && typeof config.redux.combineReducers !== 'function',\n        'init config.redux.combineReducers must be a function',\n      ],\n      [\n        config.redux.createStore && typeof config.redux.createStore !== 'function',\n        'init config.redux.createStore must be a function',\n      ],\n    ])\n  }\n\n  // defaults\n  for (const plugin of config.plugins) {\n    if (plugin.config) {\n      // models\n      const models: R.Models = merge(config.models, plugin.config.models)\n      config.models = models\n\n      // plugins\n      config.plugins = [...config.plugins, ...(plugin.config.plugins || [])]\n\n      // redux\n      if (plugin.config.redux) {\n        config.redux.initialState = merge(\n          config.redux.initialState,\n          plugin.config.redux.initialState,\n        )\n        config.redux.reducers = merge(config.redux.reducers, plugin.config.redux.reducers)\n        config.redux.rootReducers = merge(config.redux.rootReducers, plugin.config.redux.reducers)\n        config.redux.enhancers = [\n          ...config.redux.enhancers,\n          ...(plugin.config.redux.enhancers || []),\n        ]\n        config.redux.middlewares = [\n          ...config.redux.middlewares,\n          ...(plugin.config.redux.middlewares || []),\n        ]\n        config.redux.combineReducers =\n          config.redux.combineReducers || plugin.config.redux.combineReducers\n        config.redux.createStore = config.redux.createStore || plugin.config.redux.createStore\n      }\n    }\n  }\n  return config\n}\n","import Rematch from './rematch'\nimport * as R from './typings'\nimport mergeConfig from './utils/mergeConfig'\n\n// incrementer used to provide a store name if none exists\nlet count = 0\n\n/**\n * init\n *\n * generates a Rematch store\n * with a set configuration\n * @param config\n */\nexport const init = <M extends R.Models>(initConfig: R.InitConfig<M> = {}): R.RematchStore<M> => {\n  const name = initConfig.name || count.toString()\n  count += 1\n  const config: R.Config = mergeConfig({ ...initConfig, name })\n  return new Rematch(config).init()\n}\n\nexport default {\n  init,\n}\n","import * as R from './typings'\nimport { createGetters } from './utils/createGetters'\nimport { validate } from './utils/validate'\n\nexport function combineModels<\n  M extends R.Models,\n  RE extends R.ModelReducers<R.ExtractRematchStateFromModels<M>>,\n  E extends R.ModelEffects<any>,\n  G extends R.ModelGetters<any>\n>({\n  name,\n  models,\n  reducers,\n  effects,\n  getters,\n  lifecycle,\n  baseReducer,\n}: {\n  name: string\n  models: M\n  reducers?: RE\n  effects?: E\n  getters?: G\n  lifecycle?: R.LifeCycle\n  baseReducer?: R.ModelConfig<any>['baseReducer']\n}): R.CombinedModel<M, RE, E> {\n  const modelKeys = Object.keys(models)\n  const finalModels = {} as R.Models\n  modelKeys.forEach(key => {\n    validate([\n      [typeof models[key] === 'undefined', `No model provided for key ${key}`],\n      [typeof effects === 'function', `Model.effects as function is not allowed`],\n    ])\n\n    if (typeof models[key] === 'object') {\n      finalModels[key] = models[key]\n      validate([[!!models[key].baseReducer, 'SubModel.baseReducer not supported now!']])\n    }\n  })\n  const finalModelKeys = Object.keys(finalModels)\n  const finalModel = {\n    name,\n    state: {},\n    reducers: {},\n    effects: {},\n    getters: {},\n    baseReducer,\n  }\n  // set state, reducers, effects\n  finalModelKeys.forEach(key => {\n    finalModel.state[key] = finalModels[key].state\n    if (finalModels[key].reducers) {\n      finalModel.reducers[key] = finalModels[key].reducers\n    }\n    if (finalModels[key].effects) {\n      finalModel.effects[key] = finalModels[key].effects\n    }\n  })\n  if (reducers) {\n    finalModel.reducers[name] = reducers\n  }\n  if (effects) {\n    validate([[typeof effects === 'function', `Model.effects as function is not allowed`]])\n    finalModel.effects[name] = effects\n  }\n  if (getters) {\n    finalModel.reducers[name]['__getters'] = createGetters(getters)\n    finalModel.state = finalModel.reducers[name]['__getters'](finalModel.state)\n  }\n  if (lifecycle) {\n    if (!effects) {\n      finalModel.effects[name] = {}\n    }\n    finalModel.effects[name].__init = lifecycle.init\n  }\n  finalModel.baseReducer = baseReducer\n  return finalModel as any\n}\n","import * as R from './typings'\nimport { createGetters } from './utils/createGetters'\nimport { validate } from './utils/validate'\n\n/**\n * inject reducer & effects typo on this\n * @param model\n */\n\nexport function createModel<S, SS>(\n  model: R.ModelDescriptor<S, any, any, any, SS>,\n): R.ModelDescriptor<S, any, any, any, SS> {\n  validate([\n    [typeof model.effects === 'function', `Model.effects as function is not allowed`],\n    [model.getters && typeof model.getters !== 'object', `Model.getters should be object`],\n    [\n      model.getters && typeof model.state !== 'object',\n      `Model.state should be object if Model.getters exited`,\n    ],\n  ])\n  if (model.getters) {\n    model.reducers.__getters = createGetters(model.getters)\n    model.state = model.reducers.__getters(model.state)\n  }\n  if (model.lifecycle) {\n    if (!model.effects) {\n      model.effects = {}\n    }\n    model.effects.__init = model.lifecycle.init\n  }\n  return model as R.ModelDescriptor<S, any, any, any, SS>\n}\n"],"names":["defaultEqualityCheck","a","b","createGetters","getters","memoizeGetters","Object","keys","forEach","k","createSelector","input","state","result","validate","validations","memoize","_len","arguments","length","memoizeOptions","Array","_key","_len2","funcs","_key2","recomputations","resultFunc","pop","dependencies","isArray","every","dep","dependencyTypes","map","join","Error","getDependencies","memoizedResultFunc","apply","undefined","concat","selector","params","i","push","resetRecomputations","createSelectorCreator","func","equalityCheck","lastArgs","lastResult","prev","next","areArgumentsShallowlyEqual","EMPTY_GETTERS","isModels","reducers","some","key","getCurrentModelState","rootState","actionType","match","actions","split","slice","reduce","acc","current","root","walk","_a","modelName","prefix","effectsOrReducers","dispatch","onActionCallback","endsWith","nextPrefix","dispatchPlugin","exposed","storeDispatch","action","console","warn","storeGetState","this","createActor","reducerName","payload","meta","type","onStoreCreated","store","getState","onModel","model","name","reducer","_this","effectsPlugin","effects","effect","bind","isEffect","middleware","gettersPlugin","name_1","filter","startsWith","initPlugin","self","window","global","module","Function","randomString","Math","random","toString","substring","Symbol","observable","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","createStore","preloadedState","enhancer","_ref2","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","subscribe","listener","isSubscribed","index","indexOf","splice","obj","proto","getPrototypeOf","isPlainObject","listeners","replaceReducer","nextReducer","$$observable","_ref","outerSubscribe","observer","TypeError","observeState","unsubscribe","combineReducers","reducerKeys","finalReducers","shapeAssertionError","finalReducerKeys","e","hasChanged","nextState","_i","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","ownKeys","object","enumerableOnly","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","enumerable","_objectSpread2","target","source","value","defineProperty","configurable","writable","getOwnPropertyDescriptors","defineProperties","compose","arg","applyMiddleware","middlewares","_dispatch","middlewareAPI","chain","composeEnhancersWithDevtools","devtoolOptions","disabled","options","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Redux.compose","actionCreators","boundActionCreators","recurCreateModelReducer","modelState","rootReducers","extraReducers","isCombined","combinedReducers_1","redux","models","Redux.combineReducers","Redux.createStore","initialState","mergeReducers","nextReducers","createModelReducer","modelBaseReducer","baseReducer","modelReducer","selfReducers","combinedReducer","models_1","createRootReducer","mergedReducers","rootReducerAction","rootReducer","Redux.applyMiddleware","Redux","enhancers","corePlugins","lifecyclePlugin","Rematch","method","fn","plugins","plugin","forEachPlugin","getModels","config","addModel","createRedux","call","rematchStore","returned","pluginFactory","create","onInit","_c","_b","merge","original","count","lifecycle","finalModels","finalModel","__init","init","__getters","initConfig","mergeConfig"],"mappings":"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"}